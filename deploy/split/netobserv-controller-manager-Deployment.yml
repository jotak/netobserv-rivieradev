---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: netobserv-operator
    control-plane: controller-manager
  name: netobserv-controller-manager
  namespace: netobserv
spec:
  replicas: 1
  selector:
    matchLabels:
      app: netobserv-operator
      control-plane: controller-manager
  template:
    metadata:
      labels:
        app: netobserv-operator
        control-plane: controller-manager
    spec:
      containers:
        - args:
            - --health-probe-bind-address=:8081
            - --metrics-bind-address=127.0.0.1:8080
            - --leader-elect
            - --ebpf-agent-image=$(RELATED_IMAGE_EBPF_AGENT)
            - --flowlogs-pipeline-image=$(RELATED_IMAGE_FLOWLOGS_PIPELINE)
            - --console-plugin-image=$(RELATED_IMAGE_CONSOLE_PLUGIN)
            - --downstream-deployment=$(DOWNSTREAM_DEPLOYMENT)
            - --profiling-bind-address=$(PROFILING_BIND_ADDRESS)
          command:
            - /manager
          env:
            - name: RELATED_IMAGE_EBPF_AGENT
              value: quay.io/netobserv/netobserv-ebpf-agent:main
            - name: RELATED_IMAGE_FLOWLOGS_PIPELINE
              value: quay.io/netobserv/flowlogs-pipeline:main
            - name: RELATED_IMAGE_CONSOLE_PLUGIN
              value: quay.io/netobserv/network-observability-console-plugin:main
            - name: DOWNSTREAM_DEPLOYMENT
              value: "false"
            - name: PROFILING_BIND_ADDRESS
              value: ""
          image: quay.io/netobserv/network-observability-operator:main
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          name: manager
          ports:
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              memory: 400Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
        - args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            - --v=10
            - --http2-disable
          image: gcr.io/kubebuilder/kube-rbac-proxy:v0.15.0
          name: kube-rbac-proxy
          ports:
            - containerPort: 8443
              name: https
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 5m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
      securityContext:
        runAsNonRoot: true
      serviceAccountName: netobserv-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: webhook-server-cert
